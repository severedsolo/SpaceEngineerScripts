//places to store lists of Airlocks and Doors   
List<IMyTerminalBlock> medbayvent = new List<IMyTerminalBlock>();   
List<IMyTerminalBlock> productionvent = new List<IMyTerminalBlock>();
List<IMyTerminalBlock> airlockvent = new List<IMyTerminalBlock>();   
List<IMyTerminalBlock> tanks = new List<IMyTerminalBlock>();
List<IMyTerminalBlock> generators = new List<IMyTerminalBlock>();  
List<IMyTerminalBlock> doors = new List<IMyTerminalBlock>();  
   
void Main()   
{   medbayvent.Clear();   
    IMyAirVent medbay = GridTerminalSystem.GetBlockWithName("MedBay") as IMyAirVent;
    float MedbayLevel = medbay.GetOxygenLevel();

    productionvent.Clear();
    IMyAirVent production = GridTerminalSystem.GetBlockWithName("Production") as IMyAirVent;
    float ProductionLevel = production.GetOxygenLevel();

   airlockvent.Clear(); 
    IMyAirVent airlock = GridTerminalSystem.GetBlockWithName("Airlock") as IMyAirVent; 
    float AirlockLevel = airlock.GetOxygenLevel();
    bool pressure = airlock.IsDepressurizing;

    tanks.Clear();
    IMyOxygenTank tank = GridTerminalSystem.GetBlockWithName("OxTank") as IMyOxygenTank;
    float OxyLevel = tank.GetOxygenLevel();

    doors.Clear();
    IMyDoor MedProd = GridTerminalSystem.GetBlockWithName("Medbay-Production") as IMyDoor;
    IMyDoor AirlockMedbay = GridTerminalSystem.GetBlockWithName("Inner Door") as IMyDoor;
    IMyDoor AirlockProduction = GridTerminalSystem.GetBlockWithName("Inner Door 1") as IMyDoor;
    IMyDoor AiMedbay = GridTerminalSystem.GetBlockWithName("Medbay-AICore") as IMyDoor;
    IMyDoor Hangar = GridTerminalSystem.GetBlockWithName("Hangar") as IMyDoor;
    
    generators.Clear();
    IMyOxygenGenerator gen = GridTerminalSystem.GetBlockWithName("OxGen") as IMyOxygenGenerator;

    bool Medbreach = medbay.IsPressurized();
    bool Prodbreach = production.IsPressurized();
    bool MedProdDoor1 = MedbayLevel - ProductionLevel >0.01 || ProductionLevel - MedbayLevel >0.01;
    bool MedProdDoor = MedProdDoor1 == true && Medbreach == true && Prodbreach == true;
    bool MedAirlock1 = MedbayLevel - AirlockLevel > 0.01 || AirlockLevel - MedbayLevel > 0.01;
    bool MedAirlock = MedAirlock1 == true && AirlockLevel >0.8 && pressure == false && Medbreach == true;
    bool ProdAirlock1 = AirlockLevel - ProductionLevel > 0.01 || ProductionLevel - MedbayLevel > 0.01;
    bool ProdAirlock = ProdAirlock1 == true && AirlockLevel >0.8 && pressure == false && Prodbreach == true;

 

    if (Medbreach == false)
    {
    MedProd.ApplyAction("Open_Off");
    AirlockMedbay.ApplyAction("Open_Off");
    AiMedbay.ApplyAction("Open_Off");    
    }
    if (Prodbreach == false) 
    { 
    MedProd.ApplyAction("Open_Off"); 
    AirlockProduction.ApplyAction("Open_Off"); 
    Hangar.ApplyAction("Open_Off");
    } 

    if (OxyLevel > 0.7)
    {
    gen.ApplyAction("OnOff_Off");
    }
    
    if (OxyLevel <0.3)
    {
    gen.ApplyAction("OnOff_On");
    }
   
    if (MedProdDoor == true)
    {
    MedProd.ApplyAction("Open_On");
    }
    else
    {
    MedProd.ApplyAction("Open_Off");
    }

    if (ProdAirlock == true) 
    { 
    AirlockProduction.ApplyAction("Open_On"); 
    } 
    else 
    { 
    AirlockProduction.ApplyAction("Open_Off"); 
    }

    if (MedAirlock == true)  
    {  
    AirlockMedbay.ApplyAction("Open_On");  
    }  
    else  
    {  
    AirlockMedbay.ApplyAction("Open_Off");
    }
}
    